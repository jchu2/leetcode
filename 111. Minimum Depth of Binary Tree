minimum depth 不再是左右两棵树的比较，而是到leaf的长度的比较，不是leaf的长度都不能count。因此要判断左右子树是否有一个为空。
如果为空，则不能让它经历撞墙的过程，因为撞了墙就会有一个该子树的返回值影响结果。因此要用if语句来防止左右子树之一为空的那个空子树撞墙。
https://jingjingshao.gitbooks.io/data-structure-and-algorithm-analysis/content/Tree/111_minimum_depth_of_binary_tree.html

public class Solution {
    public int minDepth(TreeNode root) {
        if(root == null) return 0;
        return getMin(root);
    }
    private int getMin(TreeNode node) {
        if(node == null) return Integer.MAX_VALUE;
        else if (node.left == null && node.right == null) return 1;
        return Math.min(getMin(node.left), getMin(node.right)) + 1;
    }
}
