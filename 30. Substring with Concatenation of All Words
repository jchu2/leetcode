public class Solution {
    public List<Integer> findSubstring(String s, String[] words) {
        List<Integer> re = new ArrayList<>();
        if(words == null || words.length == 0) return re;
        int len = words[0].length();
        Map<String, Integer> hm = new HashMap<>();
        for(String str : words) hm.put(str, hm.getOrDefault(str, 0) + 1);
        for(int i = 0; i <= s.length() - words.length * len; i++) {
            Map<String, Integer> copy = new HashMap<>(hm);
            for(int j = 0; j < words.length; j++) {
                String str = s.substring(i + j*len, i + j*len + len); // next word
                if(copy.containsKey(str)) {
                    int count = copy.get(str);
                    if(count == 1) copy.remove(str);
                    else copy.put(str, count - 1);
                    if(copy.isEmpty()) {
                        re.add(i);
                        break;
                    }
                } else break;
            }
        }
        return re;
    }
}
