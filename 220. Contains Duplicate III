public class Solution {
    public boolean containsNearbyAlmostDuplicate(int[] nums, int k, int t) {
        if (nums == null || nums.length == 0 || k <= 0) return false;
        final TreeSet<Integer> values = new TreeSet<>();
        for (int ind = 0; ind < nums.length; ind++) {
            final Integer floor = values.floor(nums[ind] + t), ceil = values.ceiling(nums[ind] - t);
            if ((floor != null && floor >= nums[ind])//floor : Returns the greatest element in this set less than or equal to the given element, or null if there is no such element.
                    || (ceil != null && ceil <= nums[ind])) {
                return true;
            }
            values.add(nums[ind]);
            if (ind >= k) values.remove(nums[ind - k]);
        }

        return false;
    }
}
